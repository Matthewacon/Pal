cmake_minimum_required(VERSION 3.8)
project(pal)

set(CMAKE_C_COMPILER "/usr/bin/clang")
set(CMAKE_C_FLAGS "-std=c11 -Wall -Wextra -Werror")
set(CMAKE_C_FLAGS_DEBUG "-g")
set(CMAKE_C_FLAGS_MINSIZEREL "-Os -DNDEBUG")
set(CMAKE_C_FLAGS_RELEASE "-O4 -DNDEBUG")
set(CMAKE_C_FLAGS_RELWITHDEBINFO "-O2 -g")

set(CMAKE_CXX_COMPILER "/usr/bin/clang++")
set(CMAKE_CXX_STANDARD 17)
#set(CMAKE_CXX_FLAGS "-Wall -Wextra -Werror")
set(CMAKE_CXX_FLAGS_DEBUG "-g")
set(CMAKE_CXX_FLAGS_MINSIZEREL "-Os -DNDEBUG")
set(CMAKE_CXX_FLAGS_RELEASE "-O4 -DNDEBUG")
set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "-O2 -g")

set(CMAKE_AR "/usr/bin/llvm-ar")
set(CMAKE_LINKER "/usr/bin/llvm-ld")
set(CMAKE_NM "/usr/bin/llvm-nm")
set(CMAKE_OBJDUMP "/usr/bin/llvm-objdump")
set(CMAKE_RANLIB "/usr/bin/llvm-ranlib")

find_package(JNI REQUIRED)
include_directories(${JNI_INCLUDE_DIRS} ${JAVA_INCLUDE_PATH} include/ autogen_include/)
link_libraries(${JNI_LIBRARIES} ${JAVA_JVM_LIBRARY})
set(SOURCE_FILES src/PalAgent.cpp src/NativeUtils.cpp)
#add_executable(pal ${SOURCE_FILES})
add_library(pal_shared SHARED ${SOURCE_FILES} include/common.h)
add_library(pal_static STATIC ${SOURCE_FILES})
message(STATUS ${JNI_INCLUDE_DIRS})